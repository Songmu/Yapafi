## 正しいステータスコードを返すと言うこと

正しいステータスコードを返しましょう。エラー画面等を200で返すとかはありえません。Webはブラウザのみで閲覧されるとは限らないからです。例えば、外部サイトと連携している場合、正しいステータスコードを返すことは必須です。

どんなレスポンスが返ってきているかは、Firebugの接続タブで見ると良いでしょう。

### 最低限抑えておくべきステータスコード

ステータスコードは100番台ごとに分かれ、それぞれ以下のようになっています。

1xx Infomational
:   情報提供を行う

2xx Success
:   成功を表す

3xx Redirection
:   リダイレクトを表す

4xx Client Error
:   クライアント側に起因するエラー

5xx Server Error
:   サーバー側に起因するエラー

それぞれの中で押さえておくべきコードは以下のとおりです。

200 OK
:   正常にレスポンスが発行されたときこのコードを返します。

301 Moved Parmanently
:   リソースの**恒久的移動**を意味します。サイトの移転等、URLが変更になったときにはこのレスポンス返しましょう。SEO的に重要でサイト移転時に301を返しておくと、移転先にGoogleのPageRank等も引き継がれるとされています。また、ブラウザは本来はリダイレクト先に対してHTTPメソッドを変更してはならないとされています(POSTだったらPOSTのまま)。

302 Found
:   HTTP1.0では"Temporaly Redirect"でしたが、仕様とブラウザの実装に開きがあり使われ方もバラバラだったので、HTTP1.1では"Found"に変更になり、使い方を厳密に区別するために303と307のステータスコードが新たに策定されました。  
仕様上、リダイレクト先に対してもHTTPメソッドを変更してはならないとされています。例えばPOSTメソッドのアクセスに対して302を返された場合、ブラウザはユーザーに対してリダイレクトを行うかどうか確認を行い、その後のLocationへのアクセスは**POSTメソッドを以て行われるべき**です。しかし、多くのブラウザはそのように実装されておりません。  
303と307が策定され、このレスポンスコードは役割を終えたと考えて良いでしょう。携帯電話等、古いブラウザに対応させるために使うことはあるかもしれませんが、基本的には使いません。

303 See Other
:   HTTP1.1で新しく策定されたコードです「Locationで示されたリダイレクト先のリソースを**GETメソッドを使用して**回収すべきである」とされている点が既存のレスポンスコードと異なります。
ポストバックリダイレクト方式等、アプリケーション内でのリダイレクトは**基本303一択**です。

304 Not Modified
:   リクエストしたリソースが更新されていなかった場合にこのコードを返します。よく見るとは思いますが、アプリケーション側で意図的に返す局面は少ないでしょう。

307 Temporaly Redirect
:   HTTP1.1で新しく策定されたコードです。HTTP1.0における302の本来の動作を実現するために設けられたコードですが、案の定、ブラウザ毎の実装がバラバラであり、POSTメソッドをPOSTメソッドでリダイレクトするような動作もそれほど必要とされていないため、基本的には使いません。

401 Unauthorized
:   認証が必要な場合にこのコードを返します。あまり意識することはないかもしれませんが、基本認証のダイアログが表示されるときはこのステータスコードが返ってきています。

403 Forbidden
:   アクセスが禁止されている場合にこのコードを返します。よく見るのは、.htaccessなどでIP制限などをしたときなどです。

404 Not Found
:   皆さんよくご存知かと思います。ファイルが無いときだけではなく、アプリケーション側で意図しないURLにアクセスされた場合は、このステータスコードを返しましょう。エラー文言のページを表示して、ステータスコードは200のサイトも良く見かけますが、やってはいけません。

500 Internal Server Error
:   サーバー側のエラー発生時に返します。アクセスが集中したサイトのサーバーがダウンしてInternal Server Errorを返しているのを時々見ることがあるでしょう。また、アプリケーション開発時に汎用的なシステムエラー画面を定義するかと思いますが、あの画面は本来**ステータスコード500で返す**ものです。

### 参考サイト

Studying HTTP
: <http://www.studyinghttp.net/>



